entity srco_b_l is
   port (
      ck          : in      bit;
      vdd         : in      bit;
      vss         : in      bit;
      word_in     : in      bit_vector(7 downto 0);
      reset       : in      bit;
      address_out : out     bit_vector(7 downto 0);
      data_out    : out     bit_vector(7 downto 0);
      error_out   : out     bit
 );
end srco_b_l;

architecture structural of srco_b_l is
Component a3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a4_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nao22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x8
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal not_src_cs    : bit_vector( 7 downto 2);
signal not_word_in   : bit_vector( 7 downto 0);
signal src_cs        : bit_vector( 9 downto 0);
signal on12_x1_sig   : bit;
signal o2_x2_sig     : bit;
signal o2_x2_3_sig   : bit;
signal o2_x2_2_sig   : bit;
signal not_reset     : bit;
signal not_aux44     : bit;
signal not_aux43     : bit;
signal not_aux42     : bit;
signal not_aux41     : bit;
signal not_aux40     : bit;
signal not_aux35     : bit;
signal not_aux34     : bit;
signal not_aux25     : bit;
signal not_aux12     : bit;
signal no4_x1_sig    : bit;
signal no3_x1_sig    : bit;
signal no3_x1_2_sig  : bit;
signal no2_x1_sig    : bit;
signal no2_x1_9_sig  : bit;
signal no2_x1_8_sig  : bit;
signal no2_x1_7_sig  : bit;
signal no2_x1_6_sig  : bit;
signal no2_x1_5_sig  : bit;
signal no2_x1_4_sig  : bit;
signal no2_x1_3_sig  : bit;
signal no2_x1_2_sig  : bit;
signal no2_x1_11_sig : bit;
signal no2_x1_10_sig : bit;
signal nao22_x1_sig  : bit;
signal na4_x1_sig    : bit;
signal na4_x1_3_sig  : bit;
signal na4_x1_2_sig  : bit;
signal na3_x1_sig    : bit;
signal na3_x1_3_sig  : bit;
signal na3_x1_2_sig  : bit;
signal na2_x1_sig    : bit;
signal na2_x1_2_sig  : bit;
signal mbk_buf_aux32 : bit;
signal inv_x2_sig    : bit;
signal aux32         : bit;
signal aux21         : bit;
signal aux2          : bit;
signal aux14         : bit;
signal a4_x2_sig     : bit;
signal a4_x2_2_sig   : bit;

begin

not_aux43_ins : o2_x2
   port map (
      i0  => reset,
      i1  => not_aux35,
      q   => not_aux43,
      vdd => vdd,
      vss => vss
   );

not_aux35_ins : a2_x2
   port map (
      i0  => not_src_cs(7),
      i1  => not_src_cs(4),
      q   => not_aux35,
      vdd => vdd,
      vss => vss
   );

not_aux42_ins : o2_x2
   port map (
      i0  => reset,
      i1  => not_aux34,
      q   => not_aux42,
      vdd => vdd,
      vss => vss
   );

not_aux41_ins : o2_x2
   port map (
      i0  => reset,
      i1  => not_word_in(0),
      q   => not_aux41,
      vdd => vdd,
      vss => vss
   );

not_aux34_ins : a3_x2
   port map (
      i0  => not_src_cs(6),
      i1  => not_src_cs(2),
      i2  => not_src_cs(3),
      q   => not_aux34,
      vdd => vdd,
      vss => vss
   );

not_aux44_ins : on12_x1
   port map (
      i0  => src_cs(9),
      i1  => word_in(0),
      q   => not_aux44,
      vdd => vdd,
      vss => vss
   );

not_src_cs_7_ins : inv_x2
   port map (
      i   => src_cs(7),
      nq  => not_src_cs(7),
      vdd => vdd,
      vss => vss
   );

not_src_cs_6_ins : inv_x2
   port map (
      i   => src_cs(6),
      nq  => not_src_cs(6),
      vdd => vdd,
      vss => vss
   );

a4_x2_ins : a4_x2
   port map (
      i0  => not_reset,
      i1  => not_word_in(3),
      i2  => word_in(7),
      i3  => not_word_in(6),
      q   => a4_x2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => aux2,
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

not_aux40_ins : na3_x1
   port map (
      i0  => inv_x2_sig,
      i1  => src_cs(8),
      i2  => a4_x2_sig,
      nq  => not_aux40,
      vdd => vdd,
      vss => vss
   );

not_src_cs_4_ins : inv_x2
   port map (
      i   => src_cs(4),
      nq  => not_src_cs(4),
      vdd => vdd,
      vss => vss
   );

not_src_cs_3_ins : inv_x2
   port map (
      i   => src_cs(3),
      nq  => not_src_cs(3),
      vdd => vdd,
      vss => vss
   );

not_src_cs_2_ins : inv_x2
   port map (
      i   => src_cs(2),
      nq  => not_src_cs(2),
      vdd => vdd,
      vss => vss
   );

not_src_cs_5_ins : inv_x2
   port map (
      i   => src_cs(5),
      nq  => not_src_cs(5),
      vdd => vdd,
      vss => vss
   );

not_aux25_ins : a4_x2
   port map (
      i0  => not_aux12,
      i1  => word_in(3),
      i2  => word_in(4),
      i3  => word_in(1),
      q   => not_aux25,
      vdd => vdd,
      vss => vss
   );

not_aux12_ins : a2_x2
   port map (
      i0  => word_in(2),
      i1  => word_in(5),
      q   => not_aux12,
      vdd => vdd,
      vss => vss
   );

not_word_in_7_ins : inv_x2
   port map (
      i   => word_in(7),
      nq  => not_word_in(7),
      vdd => vdd,
      vss => vss
   );

not_word_in_6_ins : inv_x2
   port map (
      i   => word_in(6),
      nq  => not_word_in(6),
      vdd => vdd,
      vss => vss
   );

not_word_in_5_ins : inv_x2
   port map (
      i   => word_in(5),
      nq  => not_word_in(5),
      vdd => vdd,
      vss => vss
   );

not_word_in_4_ins : inv_x2
   port map (
      i   => word_in(4),
      nq  => not_word_in(4),
      vdd => vdd,
      vss => vss
   );

not_word_in_3_ins : inv_x2
   port map (
      i   => word_in(3),
      nq  => not_word_in(3),
      vdd => vdd,
      vss => vss
   );

not_word_in_2_ins : inv_x2
   port map (
      i   => word_in(2),
      nq  => not_word_in(2),
      vdd => vdd,
      vss => vss
   );

not_word_in_1_ins : inv_x2
   port map (
      i   => word_in(1),
      nq  => not_word_in(1),
      vdd => vdd,
      vss => vss
   );

not_word_in_0_ins : inv_x2
   port map (
      i   => word_in(0),
      nq  => not_word_in(0),
      vdd => vdd,
      vss => vss
   );

not_reset_ins : inv_x2
   port map (
      i   => reset,
      nq  => not_reset,
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => aux21,
      i1  => word_in(6),
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

o2_x2_ins : o2_x2
   port map (
      i1  => not_aux25,
      i0  => not_word_in(6),
      q   => o2_x2_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_ins : no2_x1
   port map (
      i0  => word_in(0),
      i1  => word_in(7),
      nq  => no2_x1_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_2_ins : na3_x1
   port map (
      i1  => no2_x1_sig,
      i0  => o2_x2_sig,
      i2  => on12_x1_sig,
      nq  => na3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => not_reset,
      i1  => src_cs(9),
      i2  => na3_x1_2_sig,
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_3_ins : na3_x1
   port map (
      i0  => not_word_in(3),
      i1  => word_in(7),
      i2  => not_word_in(6),
      nq  => na3_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => na3_x1_3_sig,
      i1  => src_cs(8),
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_2_ins : no2_x1
   port map (
      i0  => src_cs(1),
      i1  => src_cs(0),
      nq  => no2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => src_cs(8),
      i1  => aux2,
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

a4_x2_2_ins : a4_x2
   port map (
      i0  => na2_x1_2_sig,
      i1  => not_src_cs(5),
      i2  => no2_x1_2_sig,
      i3  => na2_x1_sig,
      q   => a4_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_ins : na4_x1
   port map (
      i0  => word_in(7),
      i1  => word_in(0),
      i2  => word_in(6),
      i3  => not_word_in(3),
      nq  => na4_x1_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => aux14,
      i1  => src_cs(8),
      i2  => na4_x1_sig,
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

o2_x2_2_ins : o2_x2
   port map (
      i0  => reset,
      i1  => no3_x1_sig,
      q   => o2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

aux32_ins : nao22_x1
   port map (
      i0  => o2_x2_2_sig,
      i1  => a4_x2_2_sig,
      i2  => na3_x1_sig,
      nq  => aux32,
      vdd => vdd,
      vss => vss
   );

aux21_ins : on12_x1
   port map (
      i0  => not_word_in(3),
      i1  => aux2,
      q   => aux21,
      vdd => vdd,
      vss => vss
   );

aux14_ins : na3_x1
   port map (
      i0  => not_word_in(4),
      i1  => word_in(1),
      i2  => not_aux12,
      nq  => aux14,
      vdd => vdd,
      vss => vss
   );

aux2_ins : na4_x1
   port map (
      i1  => not_word_in(2),
      i0  => not_word_in(4),
      i2  => not_word_in(5),
      i3  => not_word_in(1),
      nq  => aux2,
      vdd => vdd,
      vss => vss
   );

src_cs_0_ins : sff1_x4
   port map (
      ck  => ck,
      i   => mbk_buf_aux32,
      q   => src_cs(0),
      vdd => vdd,
      vss => vss
   );

no2_x1_3_ins : no2_x1
   port map (
      i0  => reset,
      i1  => not_src_cs(2),
      nq  => no2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_1_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_3_sig,
      q   => src_cs(1),
      vdd => vdd,
      vss => vss
   );

no2_x1_4_ins : no2_x1
   port map (
      i0  => reset,
      i1  => not_src_cs(3),
      nq  => no2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_2_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_4_sig,
      q   => src_cs(2),
      vdd => vdd,
      vss => vss
   );

no2_x1_5_ins : no2_x1
   port map (
      i0  => reset,
      i1  => not_src_cs(4),
      nq  => no2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_3_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_5_sig,
      q   => src_cs(3),
      vdd => vdd,
      vss => vss
   );

no2_x1_6_ins : no2_x1
   port map (
      i0  => not_word_in(0),
      i1  => not_aux40,
      nq  => no2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_4_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_6_sig,
      q   => src_cs(4),
      vdd => vdd,
      vss => vss
   );

no2_x1_7_ins : no2_x1
   port map (
      i0  => reset,
      i1  => not_src_cs(6),
      nq  => no2_x1_7_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_5_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_7_sig,
      q   => src_cs(5),
      vdd => vdd,
      vss => vss
   );

no2_x1_8_ins : no2_x1
   port map (
      i0  => reset,
      i1  => not_src_cs(7),
      nq  => no2_x1_8_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_6_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_8_sig,
      q   => src_cs(6),
      vdd => vdd,
      vss => vss
   );

no2_x1_9_ins : no2_x1
   port map (
      i0  => word_in(0),
      i1  => not_aux40,
      nq  => no2_x1_9_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_7_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_9_sig,
      q   => src_cs(7),
      vdd => vdd,
      vss => vss
   );

na4_x1_2_ins : na4_x1
   port map (
      i0  => word_in(6),
      i1  => not_word_in(7),
      i2  => not_aux25,
      i3  => not_reset,
      nq  => na4_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_10_ins : no2_x1
   port map (
      i0  => not_aux44,
      i1  => na4_x1_2_sig,
      nq  => no2_x1_10_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_8_ins : sff1_x4
   port map (
      ck  => ck,
      i   => no2_x1_10_sig,
      q   => src_cs(8),
      vdd => vdd,
      vss => vss
   );

no4_x1_ins : no4_x1
   port map (
      i0  => aux21,
      i1  => word_in(7),
      i2  => not_aux44,
      i3  => word_in(6),
      nq  => no4_x1_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_11_ins : no2_x1
   port map (
      i0  => reset,
      i1  => no4_x1_sig,
      nq  => no2_x1_11_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_3_ins : na4_x1
   port map (
      i0  => word_in(7),
      i1  => word_in(0),
      i2  => word_in(6),
      i3  => not_word_in(3),
      nq  => na4_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

o2_x2_3_ins : o2_x2
   port map (
      i0  => na4_x1_3_sig,
      i1  => aux14,
      q   => o2_x2_3_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_2_ins : no3_x1
   port map (
      i0  => src_cs(0),
      i1  => src_cs(5),
      i2  => src_cs(1),
      nq  => no3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

nao22_x1_ins : nao22_x1
   port map (
      i0  => no3_x1_2_sig,
      i1  => o2_x2_3_sig,
      i2  => no2_x1_11_sig,
      nq  => nao22_x1_sig,
      vdd => vdd,
      vss => vss
   );

src_cs_9_ins : sff1_x4
   port map (
      ck  => ck,
      i   => nao22_x1_sig,
      q   => src_cs(9),
      vdd => vdd,
      vss => vss
   );

error_out_ins : buf_x8
   port map (
      i   => aux32,
      q   => error_out,
      vdd => vdd,
      vss => vss
   );

data_out_0_ins : no2_x1
   port map (
      i0  => not_aux41,
      i1  => not_aux34,
      nq  => data_out(0),
      vdd => vdd,
      vss => vss
   );

data_out_1_ins : no2_x1
   port map (
      i0  => not_aux42,
      i1  => not_word_in(1),
      nq  => data_out(1),
      vdd => vdd,
      vss => vss
   );

data_out_2_ins : no2_x1
   port map (
      i0  => not_word_in(2),
      i1  => not_aux42,
      nq  => data_out(2),
      vdd => vdd,
      vss => vss
   );

data_out_3_ins : no3_x1
   port map (
      i0  => not_word_in(3),
      i1  => not_aux34,
      i2  => reset,
      nq  => data_out(3),
      vdd => vdd,
      vss => vss
   );

data_out_4_ins : no2_x1
   port map (
      i0  => not_word_in(4),
      i1  => not_aux42,
      nq  => data_out(4),
      vdd => vdd,
      vss => vss
   );

data_out_5_ins : no2_x1
   port map (
      i0  => not_word_in(5),
      i1  => not_aux42,
      nq  => data_out(5),
      vdd => vdd,
      vss => vss
   );

data_out_6_ins : no3_x1
   port map (
      i0  => not_word_in(6),
      i1  => reset,
      i2  => not_aux34,
      nq  => data_out(6),
      vdd => vdd,
      vss => vss
   );

data_out_7_ins : no3_x1
   port map (
      i0  => not_word_in(7),
      i1  => reset,
      i2  => not_aux34,
      nq  => data_out(7),
      vdd => vdd,
      vss => vss
   );

address_out_0_ins : no2_x1
   port map (
      i0  => not_aux41,
      i1  => not_aux35,
      nq  => address_out(0),
      vdd => vdd,
      vss => vss
   );

address_out_1_ins : no2_x1
   port map (
      i0  => not_aux43,
      i1  => not_word_in(1),
      nq  => address_out(1),
      vdd => vdd,
      vss => vss
   );

address_out_2_ins : no2_x1
   port map (
      i0  => not_word_in(2),
      i1  => not_aux43,
      nq  => address_out(2),
      vdd => vdd,
      vss => vss
   );

address_out_3_ins : no2_x1
   port map (
      i0  => not_word_in(3),
      i1  => not_aux43,
      nq  => address_out(3),
      vdd => vdd,
      vss => vss
   );

address_out_4_ins : no2_x1
   port map (
      i0  => not_word_in(4),
      i1  => not_aux43,
      nq  => address_out(4),
      vdd => vdd,
      vss => vss
   );

address_out_5_ins : no2_x1
   port map (
      i0  => not_word_in(5),
      i1  => not_aux43,
      nq  => address_out(5),
      vdd => vdd,
      vss => vss
   );

address_out_6_ins : no2_x1
   port map (
      i0  => not_aux43,
      i1  => not_word_in(6),
      nq  => address_out(6),
      vdd => vdd,
      vss => vss
   );

address_out_7_ins : no2_x1
   port map (
      i0  => not_aux43,
      i1  => not_word_in(7),
      nq  => address_out(7),
      vdd => vdd,
      vss => vss
   );

mbk_buf_aux32 : buf_x2
   port map (
      i   => aux32,
      q   => mbk_buf_aux32,
      vdd => vdd,
      vss => vss
   );


end structural;
